package cn.gnw.push.consumer;

import cn.gnw.pub.base.utils.SpringUtil;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration;
import org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration;
import org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
import org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;
import org.springframework.boot.web.servlet.ServletComponentScan;
import org.springframework.boot.web.servlet.ServletContextInitializer;
import org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;
import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
import org.springframework.cloud.netflix.feign.EnableFeignClients;
import org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard;
import org.springframework.web.context.support.WebApplicationContextUtils;

import javax.servlet.ServletContext;

@SpringBootApplication(exclude={
	DataSourceAutoConfiguration.class, HibernateJpaAutoConfiguration.class,
	RedisAutoConfiguration.class, RedisRepositoriesAutoConfiguration.class,
	MongoAutoConfiguration.class, MongoDataAutoConfiguration.class
})
@EnableEurekaClient
@EnableDiscoveryClient
@EnableCircuitBreaker
@ServletComponentScan
@EnableFeignClients
@EnableHystrixDashboard
public class GnwPushConsumerApplication implements ServletContextInitializer {

	public static void main(String[] args) {
		SpringApplication.run(GnwPushConsumerApplication.class, args);
	}

	@Override
	public void onStartup(ServletContext servletContext) {
		SpringUtil.setApplicationContext(WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext));
	}
}
